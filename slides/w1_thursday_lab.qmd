---
title: "Lab"
format:
  revealjs:
    slide-number: true
    preview-links: auto
    revealjs-plugins:
      - appearance
      - highlight-text
    css: styles.css
    mermaid:
      theme: neutral
footer: 'BANA 4080'
title-slide-attributes:
    data-background-image: images/lab-cover.gif
    data-background-size: cover
    data-background-opacity: "0.90"
filters: 
  - timer
---

# Week 1 Lab  {background="#43464B"}

## Week 1 Lab: Python Setup & Basics {.smaller}

Today you‚Äôll:

- Get started in **Google Colab**
- Run your first Python code
- Practice with:
  - `print()` statements
  - Python data types
  - Variables & comparison operators
- Build a simple event summary using what you‚Äôve learned

::: {.callout-note}
üìò Based on Chapters [2](https://bradleyboehmke.github.io/uc-bana-4080/02-preparing-for-code.html) & [3](https://bradleyboehmke.github.io/uc-bana-4080/03-python-basics.html)  
:::

# Our Coding Environment  {background="#43464B"}

## Colab {.smaller}

Google Colab is a free, cloud-based tool that lets you run Python code in your browser. It requires no setup and is perfect for getting started.

1. **Go to**: [https://colab.research.google.com/](https://colab.research.google.com/)
2. **Sign in** with your Google account (you‚Äôll need one).
3. Click on **‚ÄúNew Notebook.‚Äù**
4. In the cell that appears, type:

    ```python
    print("Hello World")
    ```

5. Press **Shift + Enter** to run the cell.

## Ask AI

![](images/write-code-with-ai.png)

## Combining Text & Code {.smaller}

:::: {.columns}
::: {.column}

<br>

* Within our notebooks we can include both text and code.

* This is great because it allows us to add context around our analysis directly in the same place we are writing code.

* [Let's add a title and some simple text to our notebook]{style="color:red;"}
:::
::: {.column}
![](images/my-first-notebook.png)
:::
::::

::: {.callout-note}
Don't worry, we'll go into more detail on Markdown in next week's readings.
:::

## Colab is great but... {.smaller}

You'll want to eventually install a local IDE

<br>

:::: {.columns}
::: {.column}
#### Anaconda

![](images/anaconda-navigator.png){width="80%"}
:::
::: {.column}
#### VS Code

![](images/vscode-editor.png){width="80%"}
:::
::::

::: {.callout-tip}
See the [Anaconda Installation](https://bradleyboehmke.github.io/uc-bana-4080/99-anaconda-install.html) and/or [VS Code Installation](https://bradleyboehmke.github.io/uc-bana-4080/99-vscode-install.html) guide in the book appendix
:::

# Some Python Basics  {background="#43464B"}

## Lab Notebook {.smaller}

Go here: [https://tinyurl.com/bana4080-lab1](https://tinyurl.com/bana4080-lab1)

And [Open in Colab]{style="color:red;"}

![](images/open-lab1.png)

## üçï Pizza Math: Which Is a Better Deal? {.smaller}

We're using:  
üí° $A = \pi \times r^2$ and `œÄ ‚âà 3.14159`

<br><br>

:::: {.columns}
::: {.column}

#### üßÆ 12-Inch Pizza

```{python}
#| echo: true

diameter_12 = 12
radius_12 = diameter_12 / 2
area_12 = 3.14159 * radius_12 ** 2
cost_12 = 8.00
cost_per_sqin_12 = cost_12 / area_12

print("12-inch cost per sq in:", round(cost_per_sqin_12, 4))
```

:::
::: {.column}

#### üßÆ 15-Inch Pizza

```{python}
#| echo: true
#| 
diameter_15 = 15
radius_15 = diameter_15 / 2
area_15 = 3.14159 * radius_15 ** 2
cost_15 = 12.00
cost_per_sqin_15 = cost_15 / area_15

print("15-inch cost per sq in:", round(cost_per_sqin_15, 4))
```

:::
::::

## Final Exercise ‚Äì Solution {.smaller}


```{python}
#| echo: true
# Step 1: Create variables
event_name = "Python for Everyone"
tickets_sold = 56
ticket_price = 10.50
revenue_goal = 600
```

. . .

<br>

```{python}
#| echo: true
# Step 2: Calculate total revenue
total_revenue = tickets_sold * ticket_price
```

. . .

<br>

```{python}
#| echo: true
# Step 3: Print summary report
print("The event \"" + event_name + "\" sold " + str(tickets_sold) + 
      " tickets at $" + str(ticket_price) + " each.")
print("Total revenue: $" + str(total_revenue))
print("Met or exceeded goal:", total_revenue >= revenue_goal)
```

. . .

<br>

```{python}
#| echo: true
# Step 4: Optional stretch goal (conditional message)
if total_revenue >= revenue_goal:
    print("Yaaah! We met our goal!")
else:
    print("Booo! We missed our goal.")
```



# Questions & Reflections {background="#43464B"}

## üôã End of Class ‚Äì Questions or Thoughts? {.smaller}

<br>

Before we wrap up...

- ‚ùì What questions do you still have about:
  - Colab?
  - Python basics?
  - Variables or comparisons?

- üí¨ What surprised you about writing code today?

- üß† What‚Äôs one thing you feel more confident about now?

## ‚úÖ Coming Next:

<br>

- More about Jupyter notebooks
- Python data structures (lists, tuples, sets)
- Packages, Libraries, Modules

<br><br>

See you Tuesday!
